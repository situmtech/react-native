# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: RNVersion
    type: string
    displayName: React Native Plugin Version

variables:
  - group: Passwords
  - group: ConfluencePages

resources:
  repositories:
  - repository: sys_kubernetes_templates
    type: bitbucket
    endpoint: Bitbucket - sistemas
    name: situm/sys-kubernetes-templates.git

steps:
- ${{ if contains(variables['Build.SourceBranch'], 'feature/') }}:
  - checkout: self
    fetchDepth: 1
    fetchTags: false
    displayName: Checkout self

  - bash: |
      cd situm-react-native-plugin
      echo "##vso[task.setvariable variable=version]$(echo ${{ parameters.RNVersion }})"
      currentBranch=$(echo $(Build.SourceBranch) | cut -d "/" -f 3,4)
      echo "##vso[task.setvariable variable=currentBranch]$(echo $currentBranch)"
      echo -e "\n[+] Defined versions:"
      echo -e "\t[+] NPM cli version: $(npm --version)" 
      echo -e "\t[+] React Native Plugin version: ${{ parameters.RNVersion }}"
      echo -e "\t[+] Current branch: $currentBranch"

        
      echo -e "\n[+] Setting git remote credentials\n"
      git remote set-url origin https://situmops:$(github_token)@github.com/$(Build.Repository.Name).git
      cat .git/config

    displayName: Initial Vars & Configs

  # - bash: |
  #
  #     cd situm-react-native-plugin
  #     echo -e "\n[+] Setting NPM version to $(version)"
  #     npm version $(version) --no-git-tag-version
  #
  #     echo -e "\n[+] Setting git to push NPM version\n"
  #     git config --global user.email "sistemas@situm.es"
  #     git config --global user.name "Situmops"
  #
  #     echo -e "\n[+] Fetch branches \n"
  #     git fetch
  #
  #     echo -e "\n[+] Changing to $(currentBranch)"
  #     git checkout $(currentBranch)
  #
  #     echo -e "\n[+] Add,Commit and Push to $(currentBranch)"
  #     git commit -am "Setting the NPM version to $(version)"
  #     git push --set-upstream origin $(currentBranch)
  #     git push
  #   displayName: Make changes
  #
  #
  # - template: azure-templates/publish_release.yml@sys_kubernetes_templates
  #   parameters:
  #     bitbucket:
  #       bitbucket_user: situmops
  #     system: "N/A"
  #     server: "github"
  #     repoFolder: "situm-react-native-plugin"
  #     mergeBranches:
  #       - "master"
  #       - "develop"
  #    
  #
  # - bash: |
  #     cd situm-react-native-plugin
  #     echo -e "\n[+] Fetch all branches\n"
  #     git fetch
  #
  #     echo -e "\n[+] Checkout and Pull to master branch\n"
  #     git checkout master
  #     git pull origin master
  #
  #     echo -e "\n[+] Configure NPM login"
  #     echo "//registry.npmjs.org/:_authToken=$(NPM_TOKEN)" > ~/.npmrc
  #
  #     echo -e "\n[+] Publish NPM packages"
  #     npm publish
  #
  #   displayName: NPM publish
 
  - bash: |
      if [ -d "situm-react-native-plugin" ];then
        cd situm-react-native-plugin
      fi

      androidsdk=$(grep -oE '"android": "[0-9]+\.[0-9]+\.[0-9]+@aar"' package.json | awk -F'["@]' '{print $4}')
      iossdk=$(grep -oE '"ios": "[0-9]+\.[0-9]+\.[0-9]+"' package.json | awk -F'"' '{print $4}')

      git checkout master~1

      androidsdk_old=$(grep -oE '"android": "[0-9]+\.[0-9]+\.[0-9]+@aar"' package.json | awk -F'["@]' '{print $4}')
      iossdk_old=$(grep -oE '"ios": "[0-9]+\.[0-9]+\.[0-9]+"' package.json | awk -F'"' '{print $4}')
  
      echo -e "\n[+] Versions:"
      echo -e "\t[+] RN SDK: $(version)"
      echo -e "\t[+] ANDROID SDK: $androidsdk"
      echo -e "\t[+] IOS SDK: $iossdk"
      echo -e "\t[+] ANDROID SDK (OLD VERSION): $androidsdk_old"
      echo -e "\t[+] IOS SDK (OLD IOS): $iossdk_old"

      versions="| *VERSIÓN* | *FECHA* | *ANDROID SDK* | *IOS SDK* |\n|$(version)|$(date +"%d/%m/%Y")|"

      if [ "$androidsdk" != "$androidsdk_old" ];then
        versions="$versions *$androidsdk* |"
      else
        versions="$versions $androidsdk|"
      fi

      if [ "$iossdk" != "$iossdk_old" ];then
        versions="$versions *$iossdk*|"
      else
        versions="$versions $iossdk|"
      fi

      # versions="| *VERSIÓN* | *FECHA* | *ANDROID SDK* | *IOS SDK* |\n|$(version)|$(date +"%d/%m/%Y")|$androidsdk|$iossdk|"
  
      echo "##vso[task.setvariable variable=versions]$(echo $versions)"

      echo $versions
  
    displayName: Get Versions
  
 #  - template: azure-templates/release-table.yaml@sys_kubernetes_templates
 #    parameters:
 #      versions: $(versions)
 #      releaseTable: RN_SDK_TABLE
 #      confluence_release_page: $(RN_SDK_TABLE)
 #      confluence_release_page_title: "SDK Automatic Release Table - React Native Plugin"
 #      bitbucket:
 #        bitbucket_user: $(bitbucket_user)
 #        bitbucket_pass: $(bitbucket_pass)
 # 
